From: Shaun Mulligan <switchflip.shaun@gmail.com>
Subject: [PATCH] Add Magisk to AOSP build system

diff --git a/core/Makefile b/core/Makefile
index c19b0754a..2db30e232 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -5152,6 +5152,8 @@ ifeq (true,$(PRODUCT_SUPPORTS_VBOOT))
 INTERNAL_OTATOOLS_PACKAGE_FILES += \
   $(sort $(shell find external/vboot_reference/tests/devkeys -type f))
 endif
+INTERNAL_OTATOOLS_PACKAGE_FILES += \
+  vendor/aosproot/magisk.apk
 
 INTERNAL_OTATOOLS_RELEASETOOLS := \
   $(sort $(shell find build/make/tools/releasetools -name "*.pyc" -prune -o \
@@ -5723,6 +5725,7 @@ endif
 # Depending on the various images guarantees that the underlying
 # directories are up-to-date.
 $(BUILT_TARGET_FILES_PACKAGE): \
+           $(AOSPROOT_MAGISK_APK) \
            $(INSTALLED_RADIOIMAGE_TARGET) \
            $(INSTALLED_RECOVERYIMAGE_TARGET) \
            $(INSTALLED_CACHEIMAGE_TARGET) \
@@ -6172,6 +6175,7 @@ ifeq (true,$(PRODUCT_USE_DYNAMIC_PARTITIONS))
        $(call dump-dynamic-partitions-info, $(zip_root)/META/dynamic_partitions_info.txt)
 endif
        PATH=$(INTERNAL_USERIMAGES_BINARY_PATHS):$$PATH MKBOOTIMG=$(MKBOOTIMG) \
+           AOSPROOT_MAGISK_APK=$(AOSPROOT_MAGISK_APK) \
            $(ADD_IMG_TO_TARGET_FILES) -a -v -p $(HOST_OUT) $(zip_root)
 ifeq ($(BUILD_QEMU_IMAGES),true)
        $(hide) AVBTOOL=$(AVBTOOL) $(MK_VBMETA_BOOT_KERNEL_CMDLINE_SH) $(zip_root)/IMAGES/vbmeta.img \
diff --git a/tools/releasetools/Android.bp b/tools/releasetools/Android.bp
index d8e34b7b3..5e5f7a331 100644
--- a/tools/releasetools/Android.bp
+++ b/tools/releasetools/Android.bp
@@ -301,6 +301,7 @@ python_defaults {
     // TODO (b/140144201) Build imgdiff from releasetools_common
     required: [
         "aapt2",
+        "aosproot",
         "boot_signer",
         "brotli",
         "bsdiff",
diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index af66122f5..db6859383 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -1723,6 +1723,28 @@ def _BuildBootableImage(image_name, sourcedir, fs_config_file, info_dict=None,
     img_unsigned.close()
     img_keyblock.close()
 
+  if info_dict['init_boot'] == 'true':
+    magisk_partition = 'init_boot'
+  else:
+    magisk_partition = 'boot'
+
+  if partition_name == magisk_partition:
+    magisk = os.getenv('AOSPROOT_MAGISK_APK')
+    if magisk is None:
+      # If unset, this is likely running from an otatools package
+      magisk = os.path.join(os.path.dirname(sys.path[0]),
+                            '..', 'vendor', 'aosproot', 'magisk.apk')
+
+    RunAndCheckOutput([
+      'aosproot',
+      'patch_image',
+      '--input', img.name,
+      '--output', img.name,
+      # We require writing to the same file referenced by the img fd
+      '--non-atomic',
+      '--magisk', magisk,
+    ])
+
   # AVB: if enabled, calculate and add hash to boot.img or recovery.img.
   if info_dict.get("avb_enable") == "true":
     avbtool = info_dict["avb_avbtool"]
